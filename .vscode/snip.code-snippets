{
	// Place your Competitive-programming workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"UvaHead":{
		"prefix":["UvaHead"],
		"body":[
			"//  UVa Online Judge ${TM_FILENAME/[\\_]/: /g}",
			"//  Created by David del Val on $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR"
		]
	},

	"BasicCode":{
		"prefix":["base"],
		"body":[
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"#define mp(x, y) make_pair(x, y)",
			"#define pb(x) push_back(x)",
			"#define fi first",
			"#define se second",
			"",
			"",
			"inline int _gcd(int a, int b){ while(b) b %= a ^= b ^= a ^= b; return a;}",
			"",
			"typedef long long ll;",
			"typedef vector<int> vi;",
			"typedef pair<int, int> pii;",
			"typedef pair<ll, ll> pll;",
			"int main(){",
			"\t",
			"\t",
			"\treturn 0;",
			"}"
		]
}